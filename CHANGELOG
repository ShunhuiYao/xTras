v1.0.6, 2012-12-23

* Add Scalar head in SolveTensors when LHS is a non-indexed scalar and RHS is an indexed scalar.
* Made TensorCollect a bit more verbose (shows indices).
* Changed how ImplodedTensorValues applies simplification function.
* Code formatting.
* Added SolveTensors.
* Replaced some DeleteDuplicates with Union.
* Simplified TensorCollect algorithm a bit (removed the splitting in parts with and without tensors).
* TensorCollector threads over Equal.
* Added options UncontractedPairs to AllContractions.
* Added IndexConfigurations.
* Added option ContractedPairs to AllContractions.
* New, (much!) faster implementation of AllContractions.
* New implementation of AllContractions, that contracts indices stepwise.
* Added MapTimedIfPlus.
* TensorCollect is a bit more verbose.
* Delete duplicate equations from ToConstantSymbolEquations.
* Don't replace dummies in TensorCollect if there are no dummies.
* Replaced Variables[] with Cases[] in SolveConstants.
* Another (sigh) and faster rewrite of TensorCollect.
* TensorCollect prints a message if things might not have been fully collected.
* Added option RemoveTensorCollector to TensorCollect.
* Speed improvements in SolveConstants.
* Don't specify TensorCollector weight.
* TensorCollector prints like Scalar: with colored parentheses around the wrapped expression.
* AllContractions doesn't give duplicates when the result contains fewer indices.
* MapTimed prints info a bit nicer.
* Defined a held covd alongside every other covd. (first step towards total derivatives)
* Don't restrict ToConstantSymbolEquations to work only on things that don't contain lists (this prevented it to work on basis expressions).
* Added PreferDifOf and PreferBoxOf functions.

v1.0.5, 2012-11-09

* Made TensorCollect listable.
* Fixed a bug in TensorCollect cause by my ignorance of ReplaceDummies and $ComputeNewDummies.
* ToConstantSymbolEquations handles more cases (lists, a==b==c).
* Fixed small bugs in SolveConstants.
* Fixed a bug in TensorCollect caused by SameDummies not working on expressions that are fully expanded.
* TensorCollect no longer calls Expand; TensorCollector expands on its own. Should be faster.
* TensorCollector expands TC[x(y+z)] to TC[xy] + TC[xz].
* SolveConstants now takes a ! argument, which specify which variables we shouldn't solve for.
* Fixed a small oversight in SolveConstants[expr]: it now correctly determines the constant variables in expr.
* Implemented option SymmetrizeMethod for AllContractions. It's now possible to use either ImposeSymmetry or ImposeSym.
* Rewrote the varying mechanism in AllContractions. It no longer uses VarD, and doesn't replace dummy indices.
* Changed AllContractions, both the algorithm and the interface.

v1.0.4, 2012-10-25

* Made RiemannDivRule and RicciDivRule more robust (but also more complicated).
* Remove zeros from AllContractions.
* Use Bianchi's twice in FullSimplification.
* Added Perturbation(Parameter)OfMetric.
* Renamed default metric perturbations to "Perturbation"<>"metric".
* Change covds in ImplodedTensorValues.
* Renamed CovDTensorValues to ImplodedTensorValues and changed it implementation a bit.
* Added two xCoba extensions, ComputeBasisValues and CovDTensorValues.
* Noted that MakeEquationRule is very similar to IndexSolve.
* Added shortcuts for AllContractions.
* More code formatting.
* Reimplemented SymmetricSpaceRules, EinsteinSpaceRules, and FlatRules. Much better.
* More code formatting.
* More code formatting.
* Added a $RicciSign in the Bianchi identities.
* Fixed a minor bug ( #&/ instead of #&/@ ) in PreferDivOfRule.
* Changed implementation of ConstantExprQ (again).
* More code formatting.
* Renamed MyRiemannSimplify to RiemannSimplification and added support for $RicciSign.
* More code formatting.
* Partially formatted code.
* Don't show Def messages for temporary constants.
* Changed MakeEquationRule such that it works for equations (LHS == RHS), and improved it a bit.
* Removed TensorCollectSolve
* Added SolveConstants, which is much more similar to Solve than TensorCollectSolve was.
* Updated some usage messages.

v1.0.3, 2012-10-10

* Changed xTras print message.
* Changed import of other packages.
* Printing of GPL disclaimer is more in line with xAct behaviour.
* Fixed a small bug in previous commit and indented some code.
* Automatically define metric variations by default when defining a metric.
* Removed the FD symbols and functionality.
* Added version check for xTensor.
* Correct import for Invar (the symlink is no longer broken for 1.0.4)
* MapTimed now works for generic levelspecs.
* Allow for lower label indices for Killing vectors.
* Print some info when defining a Killing vector.
* Allow for label indices in Killing vectors.
* Killing vector are now defined w.r.t. to metrics, not CovDs.
* Used MapIfPlus in two instances.
* Different implementation of Killing vectors. No longer need to issue the 'Killing' command.
* Renamed FS to FullSimplification.
* MyRiemannSimplify now only acts on Riccis and Riemanns, fixing a bug that appeared when it acted on other curvature tensors.
* MyRiemannSimplify checks more carefully for wrong values of $InvSimplifyLevel.
* Added SortedCovDsQ
* Added AllContractions.
* Added MetricPermutations.
* Fixed bug in MakeEquationRule that caused the LHS to still be partly present in the RHS.
* Teach ExpandPerturbation how to deal with extra curvature tensors.
* Removed ExpandPerturbationDer from VarDt function, hopefully fixing a bug that's probably caused by using SeparateMetric[] twice.
* Typo.
* Fixed a bug in YoungTableauQ that prevented symmetric Young tableaux from evaluating to True.
* Gave RiemannYoungRule a levelspec.

v1.0.2, 2012-08-19

Implemented Killing vectors.
Fixed bug in ConstantExprQ (caused by Variables only acting on polynomials).

v1.0.1, 2012-05-06

Added xTension hook (so Schouten and EinsteinCC are automatically defined).
* Renamed TimedMap to MapTimed.
* InvarWrapper also sets $CommuteCovDsOnScalars

v1.0.0, 2012-03-25

Initial import

